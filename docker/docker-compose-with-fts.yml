services:
  mininet:
    image: openalto/g2-mininet:minimal
    build:
      context: ./g2-mininet
      dockerfile: Dockerfile.minimal
    volumes:
      - /lib/modules:/lib/modules
      - /var/run/docker.sock:/var/run/docker.sock
      - ../utils:/utils
      - ../etc/g2-mininet:/etc/g2-mininet
      - ./g2-mininet/g2-mininet:/containernet/g2-mininet
      - ./g2-mininet/g2-mininet/pox/g2_static.py:/containernet/pox/ext/g2_static.py
      - ./alto:/opt/alto
    pid: host
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    privileged: true
    entrypoint: /bin/bash
    command: "-c 'service openvswitch-switch start && tail -f /dev/null'"
  rucio:
    image: openalto/rucio-dev
    build: rucio-containers/dev/
    container_name: rucio
    extra_hosts:
      - "ruciodb:127.0.0.1"
      - "fts:127.0.0.1"
      - "ftsdb:127.0.0.1"
      - "xrd1:10.0.0.251"
      - "xrd2:10.0.0.252"
      - "xrd3:10.0.0.253"
      - "activemq:127.0.0.1"
    ports:
      - "127.0.0.1:8443:443"
      - "127.0.0.1:5432:5432"
      - "127.0.0.1:8080:80"
      - "127.0.0.1:8446:8446"
      - "127.0.0.1:8449:8449"
      - "127.0.0.1:3306:3306"
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:61613:61613"
      - "127.0.0.1:2222:22"
    volumes:
      - ./rucio/tools:/opt/rucio/tools:Z
      - ./rucio/bin:/opt/rucio/bin:Z
      - ./rucio/lib:/opt/rucio/lib:Z
      - ./alto:/opt/alto
    environment:
      - X509_USER_CERT=/opt/rucio/etc/usercert.pem
      - X509_USER_KEY=/opt/rucio/etc/userkey.pem
      - RDBMS=postgres14
    cap_add:
      - NET_ADMIN
  odl1:
    image: openalto/odl:0.8.4
    build: odl/
    container_name: odl1
    entrypoint: /bin/bash
    command: "-c '/opt/opendaylight/bin/start && tail -f /dev/null'"
  odl2:
    image: openalto/odl:0.8.4
    build: odl/
    container_name: odl2
    # network_mode: "service:g2-mininet"
    entrypoint: /bin/bash
    command: "-c '/opt/opendaylight/bin/start && tail -f /dev/null'"
  ruciodb:
    image: docker.io/postgres:14
    network_mode: "service:rucio"
    environment:
      - POSTGRES_USER=rucio
      - POSTGRES_DB=rucio
      - POSTGRES_PASSWORD=secret
    command: ["-c", "fsync=off","-c", "synchronous_commit=off","-c", "full_page_writes=off"]
  fts:
    image: docker.io/rucio/fts
    network_mode: "service:rucio"
    volumes:
      - ./fts3config:/etc/fts3/fts3config:Z
  ftsdb:
    image: docker.io/mysql:8
    network_mode: "service:rucio"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_USER=fts
      - MYSQL_PASSWORD=fts
      - MYSQL_ROOT_PASSWORD=fts
      - MYSQL_DATABASE=fts
  xrd1:
    image: openalto/xrootd
    build: rucio-containers/dev/
    container_name: xrd1
    extra_hosts:
      - "ruciodb:10.0.0.250"
      - "fts:10.0.0.250"
      - "ftsdb:10.0.0.250"
      - "xrd1:10.0.0.251"
      - "xrd2:10.0.0.252"
      - "xrd3:10.0.0.253"
      - "activemq:10.0.0.250"
    environment:
      - XRDPORT=1094
    volumes:
      - ./rucio/etc/certs/hostcert_xrd1.pem:/tmp/xrdcert.pem:Z
      - ./rucio/etc/certs/hostcert_xrd1.key.pem:/tmp/xrdkey.pem:Z
      - ./xrootd-client.conf:/etc/xrootd/client.conf:Z
    cap_add:
      - NET_ADMIN
  xrd2:
    image: openalto/xrootd
    depends_on:
      - xrd1
    container_name: xrd2
    extra_hosts:
      - "ruciodb:10.0.0.250"
      - "fts:10.0.0.250"
      - "ftsdb:10.0.0.250"
      - "xrd1:10.0.0.251"
      - "xrd2:10.0.0.252"
      - "xrd3:10.0.0.253"
      - "activemq:10.0.0.250"
    environment:
      - XRDPORT=1094
    volumes:
      - ./rucio/etc/certs/hostcert_xrd2.pem:/tmp/xrdcert.pem:Z
      - ./rucio/etc/certs/hostcert_xrd2.key.pem:/tmp/xrdkey.pem:Z
      - ./xrootd-client.conf:/etc/xrootd/client.conf:Z
    cap_add:
      - NET_ADMIN
  xrd3:
    image: openalto/xrootd
    depends_on:
      - xrd1
    container_name: xrd3
    extra_hosts:
      - "ruciodb:10.0.0.250"
      - "fts:10.0.0.250"
      - "ftsdb:10.0.0.250"
      - "xrd1:10.0.0.251"
      - "xrd2:10.0.0.252"
      - "xrd3:10.0.0.253"
      - "activemq:10.0.0.250"
    environment:
      - XRDPORT=1094
    volumes:
      - ./rucio/etc/certs/hostcert_xrd3.pem:/tmp/xrdcert.pem:Z
      - ./rucio/etc/certs/hostcert_xrd3.key.pem:/tmp/xrdkey.pem:Z
      - ./xrootd-client.conf:/etc/xrootd/client.conf:Z
    cap_add:
      - NET_ADMIN
  activemq:
    image: docker.io/webcenter/activemq:latest
    network_mode: "service:rucio"
    environment:
      - ACTIVEMQ_CONFIG_NAME=activemq
      - ACTIVEMQ_CONFIG_DEFAULTACCOUNT=false
      - ACTIVEMQ_USERS_fts=supersecret
      - ACTIVEMQ_GROUPS_writes=fts
      - ACTIVEMQ_USERS_receiver=supersecret
      - ACTIVEMQ_GROUPS_reads=receiver
      - ACTIVEMQ_CONFIG_SCHEDULERENABLED=true
